
	
-----------------------------------------------------------	
-----------------------------------------------------------
-----------------------------------------------------------

<DB ver1.3.2>
	
	

<테이블>
CREATE TABLE users (
    id NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    username VARCHAR2(20) UNIQUE,
    name VARCHAR2(20) NOT NULL,
    email VARCHAR2(50) NOT NULL,
    phone VARCHAR2(13) NOT NULL,
    address VARCHAR2(120) NOT NULL,
    password CHAR(64) NOT NULL,
    birth number,
    nickname varchar2(20),
    kakaoId NUMBER,
    naverId NUMBER,
    provinceId NUMBER,
    cityId NUMBER,
    districtId NUMBER,
    auth VARCHAR2(10) DEFAULT 'user',
    createDate TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

CREATE TABLE category (
    id NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name VARCHAR2(40) UNIQUE NOT NULL,
    url VARCHAR2(100) UNIQUE
);

CREATE TABLE subCategory (
    id NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name VARCHAR2(40) UNIQUE NOT NULL,
    url VARCHAR2(100) UNIQUE,
    categoryId NUMBER NOT NULL,
    FOREIGN KEY (categoryId) REFERENCES category(id)
);


CREATE TABLE product (
    id NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    productName VARCHAR2(120) UNIQUE NOT NULL,
    categoryId NUMBER NOT NULL,
    price NUMBER NOT NULL,
    sold char check (sold in (0,1)),
    detail CLOB NOT NULL,
    roadAddrPart1 VARCHAR(255);
    addrDetail VARCHAR(255);
    subCategoryId NUMBER NOT NULL;
    imgUrl_1 VARCHAR2(100) NOT NULL,
    imgUrl_2 VARCHAR2(100),
    imgUrl_3 VARCHAR2(100),
    imgUrl_4 VARCHAR2(100),
    latitude VARCHAR(50),
    longitude VARCHAR(50),
    writerId NUMBER NOT NULL,
    createDate TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updateDate TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    CONSTRAINT fk_product_category FOREIGN KEY (categoryId) REFERENCES category(id),
    CONSTRAINT fk_product_users FOREIGN KEY (writerId) REFERENCES users(id)
	CONSTRAINT fk_product_subcategory FOREIGN KEY (subCategoryId) REFERENCES subCategory(id);
    );

CREATE TABLE favorite (
    id NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    userId NUMBER NOT NULL,
    productId NUMBER NOT NULL,
    createDate TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    CONSTRAINT fk_favorite_users FOREIGN KEY (userId) REFERENCES users(id),
    CONSTRAINT fk_favorite_product FOREIGN KEY (productId) REFERENCES product(id)
);

CREATE TABLE boards (
    id NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    bno NUMBER NOT NULL,
    writerId NUMBER NOT NULL,
    title varchar2(120) NOT NULL,
    detail CLOB,
  	imgUrl_1 VARCHAR2(100) NOT NULL,
    imgUrl_2 VARCHAR2(100),
    imgUrl_3 VARCHAR2(100),
    imgUrl_4 VARCHAR2(100),
	views NUMBER NOT NULL,
	likes NUMBER NOT NULL,
    createDate TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updateDate TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    CONSTRAINT fk_board_users FOREIGN KEY (writerId) REFERENCES users(id)
);

CREATE TABLE review (
    id NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    sellerId NUMBER NOT NULL,
    buyerId NUMBER NOT NULL,
    productId NUMBER NOT NULL,
    detail CLOB NOT NULL,
    rating NUMBER(10) DEFAULT 10,
    createDate TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updateDate TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    CONSTRAINT fk_review_seller FOREIGN KEY (sellerId) REFERENCES users(id),
    CONSTRAINT fk_review_buyer FOREIGN KEY (buyerId) REFERENCES users(id),
    CONSTRAINT fk_review_product FOREIGN KEY (productId) REFERENCES product(id)
);

CREATE TABLE ChatRoom (
    id NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    buyerId NUMBER NOT NULL,
    sellerId NUMBER NOT NULL,
    createdDate TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    CONSTRAINT fk_chatRoom_buyer FOREIGN KEY (buyerId) REFERENCES users(id),
    CONSTRAINT fk_chatRoom_seller FOREIGN KEY (sellerId) REFERENCES users(id)
);


CREATE TABLE Message (
    id NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    chatRoomId NUMBER NOT NULL,
    senderId NUMBER NOT NULL,
    messageText CLOB NOT NULL,
    sentDate TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    CONSTRAINT fk_message_chatRoom FOREIGN KEY (chatRoomId) REFERENCES ChatRoom(id),
    CONSTRAINT fk_message_sender FOREIGN KEY (senderId) REFERENCES users(id)
);