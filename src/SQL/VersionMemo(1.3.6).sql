<메모>
6/24 (ver1.3)
	nickname, birth 컬럼 users테이블에 추가
	ALTER TABLE users ADD nickname varchar2(20) ;
	ALTER TABLE users ADD birth number ;
---------------------------------------------------------------------------------
(ver1.3.1)
CREATE TABLE subCategory (
    id NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name VARCHAR2(40) UNIQUE NOT NULL,
    url VARCHAR2(100) UNIQUE,
    categoryId NUMBER NOT NULL,
    FOREIGN KEY (categoryId) REFERENCES category(id)
);
	
(카테고리추가= 전체복사// v_categoryId NUMBER; 옆에서Ctl+엔터)
DECLARE
    v_categoryId NUMBER;
BEGIN
    -- 카테고리 삽입
    INSERT INTO category (name) VALUES ('유아 안전용품') RETURNING id INTO v_categoryId;
    INSERT INTO subCategory (name, categoryId) VALUES ('아기 모니터', v_categoryId);
    INSERT INTO subCategory (name, categoryId) VALUES ('침대 난간 및 가드', v_categoryId);
    INSERT INTO subCategory (name, categoryId) VALUES ('게이트 및 가드', v_categoryId);
    INSERT INTO subCategory (name, categoryId) VALUES ('기타 아기 및 어린이 안전용품', v_categoryId);
    INSERT INTO subCategory (name, categoryId) VALUES ('놀이펜', v_categoryId);

    INSERT INTO category (name) VALUES ('바운서, 로커 및 그네') RETURNING id INTO v_categoryId;
    INSERT INTO subCategory (name, categoryId) VALUES ('아기 바운서', v_categoryId);
    INSERT INTO subCategory (name, categoryId) VALUES ('아기 로커', v_categoryId);
    INSERT INTO subCategory (name, categoryId) VALUES ('아기 그네', v_categoryId);
    INSERT INTO subCategory (name, categoryId) VALUES ('아기 보행기', v_categoryId);

    INSERT INTO category (name) VALUES ('기저귀 용품') RETURNING id INTO v_categoryId;
    INSERT INTO subCategory (name, categoryId) VALUES ('기저귀 가방', v_categoryId);
    INSERT INTO subCategory (name, categoryId) VALUES ('기저귀 매트', v_categoryId);
    INSERT INTO subCategory (name, categoryId) VALUES ('기타 기저귀 갈이 용품', v_categoryId);
    INSERT INTO subCategory (name, categoryId) VALUES ('유아용 변기', v_categoryId);

    INSERT INTO category (name) VALUES ('수유 용품') RETURNING id INTO v_categoryId;
    INSERT INTO subCategory (name, categoryId) VALUES ('젖병 워머', v_categoryId);
    INSERT INTO subCategory (name, categoryId) VALUES ('젖병', v_categoryId);
    INSERT INTO subCategory (name, categoryId) VALUES ('유축기', v_categoryId);
    INSERT INTO subCategory (name, categoryId) VALUES ('기타 수유 용품', v_categoryId);

    INSERT INTO category (name) VALUES ('유아 옷, 신발 및 액세서리') RETURNING id INTO v_categoryId;
    INSERT INTO subCategory (name, categoryId) VALUES ('옷 묶음', v_categoryId);
    INSERT INTO subCategory (name, categoryId) VALUES ('드레스', v_categoryId);
    INSERT INTO subCategory (name, categoryId) VALUES ('청바지 및 바지', v_categoryId);
    INSERT INTO subCategory (name, categoryId) VALUES ('어린이 액세서리', v_categoryId);
    INSERT INTO subCategory (name, categoryId) VALUES ('코트 및 재킷', v_categoryId);
    INSERT INTO subCategory (name, categoryId) VALUES ('잠옷', v_categoryId);
    INSERT INTO subCategory (name, categoryId) VALUES ('기타 어린이 옷', v_categoryId);
    INSERT INTO subCategory (name, categoryId) VALUES ('신발 및 부츠', v_categoryId);
    INSERT INTO subCategory (name, categoryId) VALUES ('수영복', v_categoryId);
    INSERT INTO subCategory (name, categoryId) VALUES ('상의 및 셔츠', v_categoryId);

    INSERT INTO category (name) VALUES ('유아 및 어린이 가구') RETURNING id INTO v_categoryId;
    INSERT INTO subCategory (name, categoryId) VALUES ('욕조', v_categoryId);
    INSERT INTO subCategory (name, categoryId) VALUES ('기저귀 교환대', v_categoryId);
    INSERT INTO subCategory (name, categoryId) VALUES ('유아용 침대', v_categoryId);
    INSERT INTO subCategory (name, categoryId) VALUES ('아기 침대 및 요람', v_categoryId);
    INSERT INTO subCategory (name, categoryId) VALUES ('하이체어', v_categoryId);
    INSERT INTO subCategory (name, categoryId) VALUES ('램프, 조명 및 갓', v_categoryId);
    INSERT INTO subCategory (name, categoryId) VALUES ('기타', v_categoryId);

    INSERT INTO category (name) VALUES ('야외 장난감') RETURNING id INTO v_categoryId;
    INSERT INTO subCategory (name, categoryId) VALUES ('기타 야외 장난감', v_categoryId);
    INSERT INTO subCategory (name, categoryId) VALUES ('놀이집 및 놀이 텐트', v_categoryId);
    INSERT INTO subCategory (name, categoryId) VALUES ('모래놀이 및 물놀이 장난감', v_categoryId);
    INSERT INTO subCategory (name, categoryId) VALUES ('스쿠터', v_categoryId);
    INSERT INTO subCategory (name, categoryId) VALUES ('스케이트보드', v_categoryId);
    INSERT INTO subCategory (name, categoryId) VALUES ('미끄럼틀', v_categoryId);

    INSERT INTO category (name) VALUES ('장난감') RETURNING id INTO v_categoryId;
    INSERT INTO subCategory (name, categoryId) VALUES ('기타 장난감', v_categoryId);
END;
/
(product테이블 컬럼추가)
ALTER TABLE product ADD subCategoryId NUMBER NOT NULL;
ALTER TABLE product ADD CONSTRAINT fk_product_subcategory FOREIGN KEY (subCategoryId) REFERENCES subCategory(id);
-----------------------------------------------------------------------------------------------------------------
(ver 1.3.2)
ALTER TABLE product ADD roadAddrPart1 VARCHAR(255);
ALTER TABLE product ADD addrDetail VARCHAR(255);
(ver 1.3.3)
ALTER TABLE product ADD latitude VARCHAR(50);
ALTER TABLE product ADD longitude VARCHAR(50);
----------------------------------------------------------------
(ver 1.3.5)

ALTER TABLE users ADD (active NUMBER(1) DEFAULT 1);

CREATE TABLE transactions (
    id NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    userId NUMBER NOT NULL,
    productId NUMBER NOT NULL,
    transaction_date TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    CONSTRAINT fk_transaction_users FOREIGN KEY (userId) REFERENCES users(id),
    CONSTRAINT fk_transaction_product FOREIGN KEY (productId) REFERENCES product(id)
);

CREATE TABLE site_traffic (
    id NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    page_url VARCHAR2(255) NOT NULL,
    visit_date TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    user_id NUMBER,
    CONSTRAINT fk_traffic_users FOREIGN KEY (user_id) REFERENCES users(id)
);
--------------------------------------------------------------------
(ver 1.3.6)
CREATE TABLE transactions (
    id NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    sellerId NUMBER NOT NULL,
    buyerId NUMBER NOT NULL,
    productId NUMBER NOT NULL,
    transaction_date TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    CONSTRAINT fk_transaction_seller FOREIGN KEY (sellerId) REFERENCES users(id),
    CONSTRAINT fk_transaction_buyer FOREIGN KEY (buyerId) REFERENCES users(id),
    CONSTRAINT fk_transaction_product FOREIGN KEY (productId) REFERENCES product(id)
);

CREATE TABLE review (
    id NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    transactionId NUMBER NOT NULL,
    title VARCHAR2(200) NOT NULL,
    detail CLOB NOT NULL,
    rating NUMBER(10) DEFAULT 10,
    views NUMBER DEFAULT 0 NOT NULL,
    likes NUMBER DEFAULT 0 NOT NULL
    ofile VARCHAR2(200),
    sfile VARCHAR2(200),
    createDate TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updateDate TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    CONSTRAINT fk_review_transaction FOREIGN KEY (transactionId) REFERENCES transactions(id)
);

ALTER TABLE review 
ADD ( 
    views NUMBER DEFAULT 0 NOT NULL,
    likes NUMBER DEFAULT 0 NOT NULL
);
-----------------------------